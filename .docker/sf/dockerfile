# Dockerfile
FROM php:8.1.10-apache

ENV COMPOSER_ALLOW_SUPERUSER=1
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN composer --version

RUN apt-get update -qq && \
    apt-get install -qy \
    git \
    gnupg \
    libzip-dev \
    unzip \
    zip 
RUN docker-php-ext-install -j$(nproc) opcache pdo_mysql 

# pour instaler ext-zip
RUN docker-php-ext-install zip

# intl (pour Sf)
RUN apt-get install -y libicu-dev \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl

# lib php de traitement des images
RUN apt-get install -y libmagickwand-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*
RUN printf "\n" | pecl install imagick
RUN docker-php-ext-enable imagick
RUN apt-get install -y zlib1g-dev libpng-dev libfreetype6-dev libjpeg62-turbo-dev
RUN docker-php-ext-configure gd --with-jpeg \
    && docker-php-ext-install -j "$(nproc)" gd

WORKDIR /var/www/app

# Droits d'Ã©criture pour www-data
RUN usermod -u 1000 www-data
RUN usermod -a -G www-data www-data
RUN usermod -a -G www-data root
RUN chmod -R 777 /var/www

COPY conf/apache/000-default.conf /etc/apache2/sites-available/000-default.conf
COPY conf/php/php.ini /etc/php/7.4/cli/conf.d/php.ini

RUN echo "Listen 8000" >> /etc/apache2/ports.conf

# activer mod_rewrite
RUN a2enmod rewrite
RUN a2enmod headers

# Mise en forme des erreurs et var_dump()
RUN pecl install xdebug
RUN docker-php-ext-enable xdebug 

# Les alias
COPY conf/.bashrc /var/www/.bashrc
RUN chown www-data:www-data /var/www/.bashrc

RUN php -r 'var_dump(gd_info());'
